name: "build"

on:
    push:
        branches:
            - main
    pull_request:
    merge_group:

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            LLVM_SYS_201_PREFIX: /usr/lib/llvm-20

        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                  # Make sure the actual branch is checked out when running on pull requests
                  ref: ${{ github.head_ref }}
                  repository: ${{github.event.pull_request.head.repo.full_name || github.repository }}
            - name: Install LLVM dependencies
              uses: awalsh128/cache-apt-pkgs-action@latest
              with:
                  packages: llvm-20 llvm-20-dev libpolly-20-dev clang-20
                  version: 1.0
            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
            - name: Install Rust problem matchers
              uses: r7kamura/rust-problem-matchers@v1
            - name: Use dependency cache
              uses: Swatinem/rust-cache@v2
            - name: cargo build
              uses: actions-rs/cargo@v1
              with:
                  command: build
            - name: Upload build artifact
              uses: actions/upload-artifact@v5
              with:
                  name: zrc-debug
                  path: target/debug/zrc
                  retention-days: 1
    verify-examples:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                  # Make sure the actual branch is checked out when running on pull requests
                  ref: ${{ github.head_ref }}
                  repository: ${{github.event.pull_request.head.repo.full_name || github.repository }}
            - name: Download build artifact
              uses: actions/download-artifact@v6
              with:
                  name: zrc-debug
                  path: ./artifacts
            - name: Make zrc executable
              run: chmod +x ./artifacts/zrc
            - name: Add zrc to PATH
              run: echo "PATH=$(pwd)/artifacts:$PATH" >> $GITHUB_ENV
            - name: Build and test all examples
              run: make -j2 -C examples test ZRC=zrc
